apply plugin: 'com.android.application'

android {
    compileSdkVersion Integer.parseInt(project.compileSdkVersion)
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        applicationId "com.zl.tech"
        minSdkVersion Integer.parseInt(project.minSdkVersion)
        targetSdkVersion Integer.parseInt(project.targetSdkVersion)
        versionCode Integer.parseInt(project.versionCode)
        versionName project.versionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    第三方版本冲突
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }
        }
    }

//    设置支持JDK1.8版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

import org.aspectj.tools.ajc.Main

//在构建工程时，执行编织
project.android.applicationVariants.all { variant ->
    JavaCompile javaCompile = variant.javaCompile
    //在编译后 增加行为
    javaCompile.doLast {
        println "执行AspectJ编译器......"
        String[] args = [
                "-1.8",
                //aspectJ 处理的源文件
                "-inpath", javaCompile.destinationDir.toString(),
                //输出目录，aspectJ处理完成后的输出目录
                "-d", javaCompile.destinationDir.toString(),
                //aspectJ 编译器的classpath aspectjtools
                "-aspectpath", javaCompile.classpath.asPath,
                //java的类查找路径
                "-classpath", javaCompile.classpath.asPath,
                //覆盖引导类的位置  android中使用android.jar 而不是jdk
                "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        new Main().runMain(args, false)
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //    eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //    Di：依赖注入
    implementation 'com.google.dagger:dagger:2.23.2'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.23.2'

    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    //net
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'

//    图片处理
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'jp.wasabeef:glide-transformations:3.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.0.0-alpha02'
    //        leakcanary解决内存泄漏
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    //    解决65536
    implementation 'androidx.multidex:multidex:2.0.1'

    //    Rx
    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.0.0'
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android:3.0.0'
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:3.0.0'
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components:3.0.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'com.jakewharton.rxbinding3:rxbinding-core:3.0.0-alpha2'
    implementation 'com.google.android.material:material:1.1.0-alpha06'

//        UI
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-14'
    //    lottie动画库
    implementation 'com.airbnb.android:lottie:3.0.1'

//    AOP
    implementation 'org.aspectj:aspectjrt:1.9.2'
}
